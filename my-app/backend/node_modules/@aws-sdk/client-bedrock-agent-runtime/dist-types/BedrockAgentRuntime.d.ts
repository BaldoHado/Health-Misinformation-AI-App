import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { BedrockAgentRuntimeClient } from "./BedrockAgentRuntimeClient";
import { InvokeAgentCommandInput, InvokeAgentCommandOutput } from "./commands/InvokeAgentCommand";
import { RetrieveAndGenerateCommandInput, RetrieveAndGenerateCommandOutput } from "./commands/RetrieveAndGenerateCommand";
import { RetrieveCommandInput, RetrieveCommandOutput } from "./commands/RetrieveCommand";
export interface BedrockAgentRuntime {
    /**
     * @see {@link InvokeAgentCommand}
     */
    invokeAgent(args: InvokeAgentCommandInput, options?: __HttpHandlerOptions): Promise<InvokeAgentCommandOutput>;
    invokeAgent(args: InvokeAgentCommandInput, cb: (err: any, data?: InvokeAgentCommandOutput) => void): void;
    invokeAgent(args: InvokeAgentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: InvokeAgentCommandOutput) => void): void;
    /**
     * @see {@link RetrieveCommand}
     */
    retrieve(args: RetrieveCommandInput, options?: __HttpHandlerOptions): Promise<RetrieveCommandOutput>;
    retrieve(args: RetrieveCommandInput, cb: (err: any, data?: RetrieveCommandOutput) => void): void;
    retrieve(args: RetrieveCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RetrieveCommandOutput) => void): void;
    /**
     * @see {@link RetrieveAndGenerateCommand}
     */
    retrieveAndGenerate(args: RetrieveAndGenerateCommandInput, options?: __HttpHandlerOptions): Promise<RetrieveAndGenerateCommandOutput>;
    retrieveAndGenerate(args: RetrieveAndGenerateCommandInput, cb: (err: any, data?: RetrieveAndGenerateCommandOutput) => void): void;
    retrieveAndGenerate(args: RetrieveAndGenerateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RetrieveAndGenerateCommandOutput) => void): void;
}
/**
 * <p>Contains APIs related to model invocation and querying of knowledge bases.</p>
 * @public
 */
export declare class BedrockAgentRuntime extends BedrockAgentRuntimeClient implements BedrockAgentRuntime {
}
